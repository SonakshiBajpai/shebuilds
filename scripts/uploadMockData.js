// One-time script to upload mock user data to Firestore
// Run with: node scripts/uploadMockData.js

const { initializeApp } = require('firebase/app');
const { getFirestore, collection, doc, setDoc } = require('firebase/firestore');

// Load environment variables
require('dotenv').config({ path: '.env.local' });

const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

const mockUsers = [
  {
    age: "22",
    cleanliness: "very-clean",
    completedAt: new Date().toISOString(),
    currentCity: "delhi",
    drinking: "occasionally",
    floorPreference: "low",
    foodHabits: "non-vegetarian",
    guestPolicy: "occasional",
    lightPreference: "bright",
    onboarded: true,
    personality: {
      agreeableness: 3,
      conscientiousness: 3,
      extroversion: 3,
      neuroticism: 3,
      openness: 3,
    },
    preferredCity: "bangalore",
    profession: "developer",
    profilePicture: "",
    roomType: "twin-sharing",
    sleepSchedule: "flexible",
    smoking: "regularly",
    timestamp: Date.now(),
    verifiedOnly: true,
    windowPreference: "lots-of-windows",
  },
  {
    age: "25",
    cleanliness: "moderately-clean",
    completedAt: new Date().toISOString(),
    currentCity: "mumbai",
    drinking: "never",
    floorPreference: "high",
    foodHabits: "vegetarian",
    guestPolicy: "frequent",
    lightPreference: "bright",
    onboarded: true,
    personality: {
      agreeableness: 3,
      conscientiousness: 3,
      extroversion: 3,
      neuroticism: 3,
      openness: 3,
    },
    preferredCity: "pune",
    profession: "designer",
    profilePicture: "",
    roomType: "twin-sharing",
    sleepSchedule: "night-owl",
    smoking: "never",
    timestamp: Date.now(),
    verifiedOnly: true,
    windowPreference: "lots-of-windows",
  },
  {
    age: "23",
    cleanliness: "very-clean",
    completedAt: new Date().toISOString(),
    currentCity: "bangalore",
    drinking: "regularly",
    floorPreference: "mid",
    foodHabits: "non-vegetarian",
    guestPolicy: "occasional",
    lightPreference: "bright",
    onboarded: true,
    personality: {
      agreeableness: 3,
      conscientiousness: 3,
      extroversion: 3,
      neuroticism: 3,
      openness: 3,
    },
    preferredCity: "delhi",
    profession: "artist",
    profilePicture: "",
    roomType: "twin-sharing",
    sleepSchedule: "flexible",
    smoking: "occasionally",
    timestamp: Date.now(),
    verifiedOnly: true,
    windowPreference: "lots-of-windows",
  },
  {
    age: "21",
    cleanliness: "moderately-clean",
    completedAt: new Date().toISOString(),
    currentCity: "chennai",
    drinking: "occasionally",
    floorPreference: "low",
    foodHabits: "vegan",
    guestPolicy: "rare",
    lightPreference: "bright",
    onboarded: true,
    personality: {
      agreeableness: 3,
      conscientiousness: 3,
      extroversion: 3,
      neuroticism: 3,
      openness: 3,
    },
    preferredCity: "mumbai",
    profession: "student",
    profilePicture: "",
    roomType: "twin-sharing",
    sleepSchedule: "early-riser",
    smoking: "never",
    timestamp: Date.now(),
    verifiedOnly: true,
    windowPreference: "lots-of-windows",
  },
  {
    age: "24",
    cleanliness: "very-clean",
    completedAt: new Date().toISOString(),
    currentCity: "pune",
    drinking: "occasionally",
    floorPreference: "high",
    foodHabits: "non-vegetarian",
    guestPolicy: "frequent",
    lightPreference: "bright",
    onboarded: true,
    personality: {
      agreeableness: 3,
      conscientiousness: 3,
      extroversion: 3,
      neuroticism: 3,
      openness: 3,
    },
    preferredCity: "delhi",
    profession: "lawyer",
    profilePicture: "",
    roomType: "twin-sharing",
    sleepSchedule: "night-owl",
    smoking: "regularly",
    timestamp: Date.now(),
    verifiedOnly: true,
    windowPreference: "lots-of-windows",
  },
  {
    age: "26",
    cleanliness: "moderately-clean",
    completedAt: new Date().toISOString(),
    currentCity: "hyderabad",
    drinking: "never",
    floorPreference: "mid",
    foodHabits: "vegetarian",
    guestPolicy: "occasional",
    lightPreference: "bright",
    onboarded: true,
    personality: {
      agreeableness: 3,
      conscientiousness: 3,
      extroversion: 3,
      neuroticism: 3,
      openness: 3,
    },
    preferredCity: "bangalore",
    profession: "marketer",
    profilePicture: "",
    roomType: "twin-sharing",
    sleepSchedule: "flexible",
    smoking: "never",
    timestamp: Date.now(),
    verifiedOnly: true,
    windowPreference: "lots-of-windows",
  },
  {
    age: "27",
    cleanliness: "very-clean",
    completedAt: new Date().toISOString(),
    currentCity: "jaipur",
    drinking: "occasionally",
    floorPreference: "low",
    foodHabits: "non-vegetarian",
    guestPolicy: "frequent",
    lightPreference: "bright",
    onboarded: true,
    personality: {
      agreeableness: 3,
      conscientiousness: 3,
      extroversion: 3,
      neuroticism: 3,
      openness: 3,
    },
    preferredCity: "mumbai",
    profession: "doctor",
    profilePicture: "",
    roomType: "twin-sharing",
    sleepSchedule: "flexible",
    smoking: "occasionally",
    timestamp: Date.now(),
    verifiedOnly: true,
    windowPreference: "lots-of-windows",
  },
  {
    age: "22",
    cleanliness: "moderately-clean",
    completedAt: new Date().toISOString(),
    currentCity: "lucknow",
    drinking: "occasionally",
    floorPreference: "mid",
    foodHabits: "vegetarian",
    guestPolicy: "rare",
    lightPreference: "bright",
    onboarded: true,
    personality: {
      agreeableness: 3,
      conscientiousness: 3,
      extroversion: 3,
      neuroticism: 3,
      openness: 3,
    },
    preferredCity: "delhi",
    profession: "writer",
    profilePicture: "",
    roomType: "twin-sharing",
    sleepSchedule: "early-riser",
    smoking: "never",
    timestamp: Date.now(),
    verifiedOnly: true,
    windowPreference: "lots-of-windows",
  },
  {
    age: "28",
    cleanliness: "very-clean",
    completedAt: new Date().toISOString(),
    currentCity: "kolkata",
    drinking: "occasionally",
    floorPreference: "high",
    foodHabits: "non-vegetarian",
    guestPolicy: "frequent",
    lightPreference: "bright",
    onboarded: true,
    personality: {
      agreeableness: 3,
      conscientiousness: 3,
      extroversion: 3,
      neuroticism: 3,
      openness: 3,
    },
    preferredCity: "chennai",
    profession: "engineer",
    profilePicture: "",
    roomType: "twin-sharing",
    sleepSchedule: "night-owl",
    smoking: "regularly",
    timestamp: Date.now(),
    verifiedOnly: true,
    windowPreference: "lots-of-windows",
  },
  {
    age: "23",
    cleanliness: "moderately-clean",
    completedAt: new Date().toISOString(),
    currentCity: "ahmedabad",
    drinking: "never",
    floorPreference: "low",
    foodHabits: "vegan",
    guestPolicy: "occasional",
    lightPreference: "bright",
    onboarded: true,
    personality: {
      agreeableness: 3,
      conscientiousness: 3,
      extroversion: 3,
      neuroticism: 3,
      openness: 3,
    },
    preferredCity: "bangalore",
    profession: "teacher",
    profilePicture: "",
    roomType: "twin-sharing",
    sleepSchedule: "flexible",
    smoking: "never",
    timestamp: Date.now(),
    verifiedOnly: true,
    windowPreference: "lots-of-windows",
  }
];

async function uploadMockData() {
  console.log('🚀 Starting mock data upload...');
  
  try {
    for (let i = 0; i < mockUsers.length; i++) {
      const user = mockUsers[i];
      const userDoc = doc(collection(db, 'mockProfiles'), `user_${i + 1}`);
      
      await setDoc(userDoc, user);
      console.log(`✅ Uploaded user ${i + 1}: ${user.profession} from ${user.currentCity}`);
    }
    
    console.log('🎉 All mock data uploaded successfully!');
    console.log(`📊 Total users uploaded: ${mockUsers.length}`);
    console.log('🗂️ Collection: mockProfiles');
    console.log('');
    console.log('You can now delete this script file: scripts/uploadMockData.js');
    
  } catch (error) {
    console.error('❌ Error uploading data:', error);
  }
}

uploadMockData(); 